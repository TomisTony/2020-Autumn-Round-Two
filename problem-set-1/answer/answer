1-1
不同系统之间函数的底层实现不同，然而C语言的函数的作用是相同的，等同于说起到了封装的作用
由于底层实现与所处环境息息相关，一旦环境改变，就意味着底层必须重写
但是待其被封装了之后，就可以直接拿来用
比如  苹果  这个东西，在美国叫做 apple  ，在中国叫做“苹果”，假设有一个中国人和美国人，分别只懂英文和中文
美国人对中国人大喊：apple!!!，中国人听不懂
但是如果他掏出了一个苹果，后一个人就知道了：就是 “苹果” 嘛！
不同的底层实现就是apple以及“苹果”二字，而C语言的库函数就是 苹果 本身
（这个例子好像不太好....算了）
有些人说：“C就是汇编语言的封装，是结构上最接近汇
编的存在，就这么简单”，由此来看，我认为这是有道理的。

至于为什么是C而不是其他编程语言，我认为（被迫认为）是历史原因造成的。
当年的UNIX系统的重写是运用了大量的C和小部分的汇编，对后世产生了深远的影响
为了保持可移植性，以后也用C了喽~

1-2
windows系统和unix的定义应该都是内核和程序两方面，而unix以文本命令为主，不像windows有着大量的图形界面
（这也是windows比较简单入手的原因之一）
windows主要是用C++编写的，而unix主要是用C编写的
对于windows系统来说，设备就是设备（至少我看来是这样的），而对于unix来说，装置被当做一种文件来处理
windows和unix的进程之间都可以通过pipes进行通信。

1-3
关于第一点，我并不认同。
    现代的程序都是高集成性的，比如PS就是由无数功能杂糅而成的，如果为了构造一张图，我画一条直线就需要一个软件
   上个色需要另一个软件，叠加一个滤镜再需要一个软件.......这将是无比痛苦的一件事。（这里我把“程序”理解成了软件
   ，但如果应该理解成最底层的功能片段的话，那么我将会认为第一点是正确的，因为对于一个最小的功能单元来说，致简、
   致精才是王道。）
关于第二点，我认同。
     多个程序的同时运行在现在看来应该已经是天经地义的事情了吧.......现在我就开着浏览器用着记事本打字，如果要我关闭
     浏览器再打开记事本，想查资料需要保存并关闭记事本再打开浏览器.......啊这，也太折磨人了吧。
关于第三点，我认同。
     文字，作为人类最伟大的发明之一.......没错，想当年用机器语言编写程序的时候，这个0011简直不是人干的事情，还要经常
     去查表来确定二进制。反观现在的高级语言，用文字表示逻辑，可读性就立马提高了。文本的重要性可见一斑了！文本绝对
     是让数据能让人看懂的一大利器！如果程序能处理文本，那么该程序的实用性、适用性、使用性都将会上升一个层次。

1-4
GPL/MIT/APACHE/BSD四者均有可能

1-5
Chromium浏览器，现在很多其他浏览器也是基于Chromium开发的，其使用的是BSD协议

1-6
Linux、Firefox、PostgreSQL、GIMP、VLC、Python、inkscape

1-7
我认为linux算是一个操作系统。它有内核，也可以跑一堆程序，最重要的是，它的确可以像windows、MAC OS一样使用，完成
基本日常的所有工作。

1-8
1.虚拟机就是在原有操作系统上的一个软件，用来模拟另一个完整的计算机系统，两者之间不干扰。
2.√
3.

2-1
不一样.....他直接是空的输出。原因应该是进入shell之后，原来定义的环境变量无法使用了，输出的是一个全新的MY_VALUE

2-2
键入命令export MY_VALUE=【某个数】，其作用范围为之后的任何脚本

2-4
sudo useradd dino
sudo passwd dino
（设置蜜汁密码之后）
sudo vim /etc/sudoers
里面的某个地方加一句
dino ALL=(ALL) ALL

2-5
每行一条用户信息，一共7个字段
用户名：密码：UID（用户ID）：GID（组ID）：描述性信息：主目录：默认Shell


2-6
xterm是一个模拟终端软件，其依赖的有
  依赖: xbitmaps
  依赖: libc6
  依赖: libfontconfig1
  依赖: libfreetype6
  依赖: libice6
  依赖: libtinfo6
  依赖: libutempter0
  依赖: libx11-6
  依赖: libxaw7
  依赖: libxext6
  依赖: libxft2
  依赖: libxinerama1
  依赖: libxmu6
  依赖: libxpm4
  依赖: libxt6

2-7
Main 组件包含自由软件的软件包。这些软件包在安装 Ubuntu 时就默认可用。所有 Main 组件中的软件包都可免费获得安全更新和
技术支持。OpenOffice.org网络服务器就在其中。

Restricted 组件包含通常使用的软件，由 Ubuntu 团队支持，但不是完全的自由软件许可授权。如unrar（好像是的）。

Universe 组件包含了数千个不由 Canonical 官方支持的软件包。这些软件授权于各种自由软件许可协议，
来自各种公共来源。此组件只能通过互联网下载获得。在此组件中的所有软件包都能完美地运行工作。不过，
这些软件包不保证有安全修正和支持。这些软件包由社区维护。如xterm。

 Multiverse 组件包含非自由软件，也就是说软件的许可协议需求与 Ubuntu Main 组件的许可协议规则不符。
用户需负责验证自己是否有权使用该软件并接受单一的许可协议条款。Ubuntu 不提供支持和安全更新。
例如Adobe Flash 插件。

Partner由Ubuntu为其合作伙伴打包的专有软件组成。

2-8
适用n次 cd /..

2-9
键入ls -a .*

2-10
先用cd命令进入etc文件夹，然后使用 ls -a *.conf来列出所有所求文件

2-11
c代表了字符设备文件，b表示了块设备
